require 'roman_numerals'
require 'roman_numeral_spec_string'

# then converted it to a hash of roman numerals

def hashify(string)
  hash = Hash.new
  string.split.each_slice(2) {|a| hash[a[0]] = a[1]}
  return hash
end

# hashes generated by hashify
hash_1_to_1000 = hashify($string.strip)


# iterates through the hash, checking all numerals 1 - 1000
describe Romaniser do
  c = 0
  1000.times do
    c+=1
    p c
    p hash_1_to_1000[c.to_s]

    it { expect(subject.romanise(c)).to eq "#{hash_1_to_1000[c.to_s]}" }

  end
end

# extra tests (skipped using xit instead of it)

describe Romaniser do
  it { expect(subject.romanise(500_000)).to eq "-D"}
  it { expect(subject.romanise(1_000_000)).to eq "-M" }
  it { expect(subject.romanise(9_000)).to eq "M-X"}
  it { expect(subject.romanise(1_111)).to eq "MCXI"}
  it { expect(subject.romanise(11_111)).to eq "-XMCXI"}
  it { expect(subject.romanise(900_000)).to eq "-C-M" }
  it { expect(subject.romanise(999_000)).to eq "-C-M-X-CM-X"}
  it { expect(subject.romanise(999_999)).to eq "-C-M-X-CM-XCMXCIX" }
end
